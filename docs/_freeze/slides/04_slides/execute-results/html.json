{
  "hash": "550e31cf3913967bd190d5619c23eb78",
  "result": {
    "markdown": "---\nformat:\n  revealjs:\n    theme: [default, custom.scss]\n    slide-number: true\n---\n\n\n\n\n\n::: {style=\"text-align: center\"}\n## Sensitive Questions {.center background-color=\"#ac1455\"}\n\n&nbsp;\n\n**POLSCI 4SS3**  \nWinter 2023\n:::\n\n## Announcements {background-color=\"#8BD3E6\"}\n\n- Groups put in contact yesterday\n\n- Topic is highly negotiable\n\n- Don't forget to schedule a meeting before break!\n\n## Last week {background-color=\"#FDBF57\"}\n\n- Elements of models `(signature, functional relations, probability distributions)`\n\n- **Panel surveys:** Good for understanding before-after effects, expensive to conduct\n\n## Today {background-color=\"#FDBF57\"}\n\n- Elements of **data strategies** and **answer strategies**\n\n- Research designs for sensitive questions\n\n- **Lab:** Write your own design\n\n::: {style=\"text-align: center\"}\n# Data and Answer Strategies {background-color=\"#FDBF57\"}\n:::\n\n## Elements of a data strategy\n\n::: incremental\n1. Sampling `(random, nonrandom)`\n\n2. Treatment assignment `(if applicable)`\n\n3. Measurement `(validity, reliability)`\n:::\n\n## Measurement as multiple independent draws\n\n![](figs/darts_validity.png){fig-align=\"center\"}\n\n## Elements of an answer strategy\n\n::: incremental\n1. Answer characterization `(domain, units, outcomes, conditions)`\n\n2. Uncertainty `(Bayesian, frequentist)`\n\n3. Procedure `(e.g. OLS, difference-in-means)`\n:::\n\n## Types of answer strategies\n\n. . .\n\n1. Point estimation \n\n. . .\n\n::: {.callout-note}\n### Example\n\n- What is the proportion of French speakers?\n\n- What is the effect of taking a political science course on political interest?\n:::\n\n## Types of answer strategies {visibility=\"uncounted\"}\n\n2. Hypothesis testing\n\n. . .\n\n::: {.callout-note}\n### Example\n\n- Has the proportion of French speakers increased?\n\n- Is there an effect of taking a political science course on political interest?\n:::\n\n\n::: {style=\"text-align: center\"}\n# Sensitive Questions {background-color=\"#FDBF57\"}\n:::\n\n\n\n\n\n::: {style=\"text-align: center\"}\n## Next Week {.center background-color=\"#8BD3E6\"}\n### Survey Experiments\n\n**Focus on:** What are they good for?\n:::\n\n::: {style=\"text-align: center\"}\n## Break time! {.center background-color=\"#D2D755\"}\n\n&nbsp;\n\n![](figs/panda_dance.gif){fig-align=\"center\" width=\"10%\" height=\"10%\"} \n:::\n\n::: {style=\"text-align: center\"}\n## {{< fa laptop-code >}} Lab {.center background-color=\"#007096\"}\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}