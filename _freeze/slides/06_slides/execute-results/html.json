{
  "hash": "cc3939877898362a7663151aadbddb8a",
  "result": {
    "markdown": "---\nformat:\n  revealjs:\n    theme: [default, custom.scss]\n    slide-number: true\n---\n\n\n\n\n\n::: {style=\"text-align: center\"}\n## Convenience Samples {.center background-color=\"#ac1455\"}\n\n&nbsp;\n\n**POLSCI 4SS3**  \nWinter 2023\n:::\n\n## Course so far {background-color=\"#FDBF57\"}\n\n- Representative surveys as the gold standard\n\n- Other research design help us learn more but tend to use convenience samples\n\n- **Today:** Talk more about convenience samples\n\n## We are seeing less of this\n\n[Here pic of CES]\n\n## And more of this\n\n[Here pic of online survey platforms]\n\n## Do we want surveys to be representative?\n\n::: incremental\n\n- Pros?\n\n- Cons?\n\n- We always want them!\n\n- But when do we **need** them?\n\n- Rather, when can we **get away** with not having them?\n\n:::\n\n\n\n## Internal an external validity\n\n::: incremental\n\n- **Validity:** Approximate truth or usefulness of an inference\n\n- **Inference:** How we interpret the results of a study\n\n- **Internal validity:** Whether inferences from a single study *cannot* be explained by other factors\n\n- **External validity:** Whether inferences from a single study apply to a broader population or other target populations\n\n- Convenience samples make it *easier* to achieve *internal validity* at the *expense* of *external validity* \n\n:::\n\n## Types of internal validity\n\n1. X-validity `(endogenous variables)`\n\n2. T-validity `(treatments, conditions)`\n\n3. Y-validity `(outcome variables)`\n\n4. C-validity `(context)`\n\n::: aside\nSee [Egami and Hartman (2022)](https://doi.org/10.1017/S0003055422000880) for more\n:::\n\n::: {style=\"text-align: center\"}\n## After Recess {.center background-color=\"#8BD3E6\"}\n### Evidence-Informed Policy\n\n**Focus on:** New topic!\n:::\n\n::: {style=\"text-align: center\"}\n## Break time! {.center background-color=\"#D2D755\"}\n\n&nbsp;\n\n![](figs/panda_dance.gif){fig-align=\"center\" width=\"10%\" height=\"10%\"} \n:::\n\n::: {style=\"text-align: center\"}\n## {{< fa laptop-code >}} Lab {.center background-color=\"#007096\"}\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}